/*
 * CuadraAiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package ai.cuadra.api.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.Map;

/**
 * This is a model class for ChatResponseEx type.
 */
public class ChatResponseEx {
    private String output;
    private Double confidenceScore;
    private String model;
    private UsageEx usage;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public ChatResponseEx() {
    }

    /**
     * Initialization constructor.
     * @param  output  String value for output.
     * @param  confidenceScore  Double value for confidenceScore.
     * @param  model  String value for model.
     * @param  usage  UsageEx value for usage.
     */
    public ChatResponseEx(
            String output,
            Double confidenceScore,
            String model,
            UsageEx usage) {
        this.output = output;
        this.confidenceScore = confidenceScore;
        this.model = model;
        this.usage = usage;
    }

    /**
     * Getter for Output.
     * Output generated by the AI to resolve the request
     * @return Returns the String
     */
    @JsonGetter("output")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getOutput() {
        return output;
    }

    /**
     * Setter for Output.
     * Output generated by the AI to resolve the request
     * @param output Value for String
     */
    @JsonSetter("output")
    public void setOutput(String output) {
        this.output = output;
    }

    /**
     * Getter for ConfidenceScore.
     * Confidence score of how accurate is the output regarding your request
     * @return Returns the Double
     */
    @JsonGetter("confidenceScore")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getConfidenceScore() {
        return confidenceScore;
    }

    /**
     * Setter for ConfidenceScore.
     * Confidence score of how accurate is the output regarding your request
     * @param confidenceScore Value for Double
     */
    @JsonSetter("confidenceScore")
    public void setConfidenceScore(Double confidenceScore) {
        this.confidenceScore = confidenceScore;
    }

    /**
     * Getter for Model.
     * Model used to resolve your query
     * @return Returns the String
     */
    @JsonGetter("model")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getModel() {
        return model;
    }

    /**
     * Setter for Model.
     * Model used to resolve your query
     * @param model Value for String
     */
    @JsonSetter("model")
    public void setModel(String model) {
        this.model = model;
    }

    /**
     * Getter for Usage.
     * This is the token usage result of your request
     * @return Returns the UsageEx
     */
    @JsonGetter("usage")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public UsageEx getUsage() {
        return usage;
    }

    /**
     * Setter for Usage.
     * This is the token usage result of your request
     * @param usage Value for UsageEx
     */
    @JsonSetter("usage")
    public void setUsage(UsageEx usage) {
        this.usage = usage;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this ChatResponseEx into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ChatResponseEx [" + "output=" + output + ", confidenceScore=" + confidenceScore
                + ", model=" + model + ", usage=" + usage + ", additionalProperties="
                + additionalProperties + "]";
    }

    /**
     * Builds a new {@link ChatResponseEx.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ChatResponseEx.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .output(getOutput())
                .confidenceScore(getConfidenceScore())
                .model(getModel())
                .usage(getUsage());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link ChatResponseEx}.
     */
    public static class Builder {
        private String output;
        private Double confidenceScore;
        private String model;
        private UsageEx usage;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();



        /**
         * Setter for output.
         * @param  output  String value for output.
         * @return Builder
         */
        public Builder output(String output) {
            this.output = output;
            return this;
        }

        /**
         * Setter for confidenceScore.
         * @param  confidenceScore  Double value for confidenceScore.
         * @return Builder
         */
        public Builder confidenceScore(Double confidenceScore) {
            this.confidenceScore = confidenceScore;
            return this;
        }

        /**
         * Setter for model.
         * @param  model  String value for model.
         * @return Builder
         */
        public Builder model(String model) {
            this.model = model;
            return this;
        }

        /**
         * Setter for usage.
         * @param  usage  UsageEx value for usage.
         * @return Builder
         */
        public Builder usage(UsageEx usage) {
            this.usage = usage;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link ChatResponseEx} object using the set fields.
         * @return {@link ChatResponseEx}
         */
        public ChatResponseEx build() {
            ChatResponseEx model2 =
                    new ChatResponseEx(output, confidenceScore, model, usage);
            model2.additionalProperties = additionalProperties;
            return model2;
        }
    }
}
