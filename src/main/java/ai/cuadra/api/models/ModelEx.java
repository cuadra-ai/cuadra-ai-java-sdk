/*
 * CuadraAiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package ai.cuadra.api.models;

import ai.cuadra.api.DateTimeHelper;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.time.LocalDateTime;
import java.util.Map;

/**
 * This is a model class for ModelEx type.
 */
public class ModelEx {
    private String id;
    private String name;
    private String type;
    private String description;
    private Boolean proprietary;
    private String baseModel;
    private String baseModelId;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public ModelEx() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  type  String value for type.
     * @param  description  String value for description.
     * @param  id  String value for id.
     * @param  proprietary  Boolean value for proprietary.
     * @param  baseModel  String value for baseModel.
     * @param  baseModelId  String value for baseModelId.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  updatedAt  LocalDateTime value for updatedAt.
     */
    public ModelEx(
            String name,
            String type,
            String description,
            String id,
            Boolean proprietary,
            String baseModel,
            String baseModelId,
            LocalDateTime createdAt,
            LocalDateTime updatedAt) {
        this.id = id;
        this.name = name;
        this.type = type;
        this.description = description;
        this.proprietary = proprietary;
        this.baseModel = baseModel;
        this.baseModelId = baseModelId;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for Id.
     * Model Id
     * @return Returns the String
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Model Id
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Name.
     * Model name
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Model name
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Type.
     * Model type of content generation and processing
     * @return Returns the String
     */
    @JsonGetter("type")
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * Model type of content generation and processing
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for Description.
     * Brief description of the model
     * @return Returns the String
     */
    @JsonGetter("description")
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * Brief description of the model
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for Proprietary.
     * Indicates whether is a custom model created by you or not
     * @return Returns the Boolean
     */
    @JsonGetter("proprietary")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getProprietary() {
        return proprietary;
    }

    /**
     * Setter for Proprietary.
     * Indicates whether is a custom model created by you or not
     * @param proprietary Value for Boolean
     */
    @JsonSetter("proprietary")
    public void setProprietary(Boolean proprietary) {
        this.proprietary = proprietary;
    }

    /**
     * Getter for BaseModel.
     * Base model name, if it was created from another model
     * @return Returns the String
     */
    @JsonGetter("baseModel")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBaseModel() {
        return baseModel;
    }

    /**
     * Setter for BaseModel.
     * Base model name, if it was created from another model
     * @param baseModel Value for String
     */
    @JsonSetter("baseModel")
    public void setBaseModel(String baseModel) {
        this.baseModel = baseModel;
    }

    /**
     * Getter for BaseModelId.
     * Base model id, if it was created from another model
     * @return Returns the String
     */
    @JsonGetter("baseModelId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBaseModelId() {
        return baseModelId;
    }

    /**
     * Setter for BaseModelId.
     * Base model id, if it was created from another model
     * @param baseModelId Value for String
     */
    @JsonSetter("baseModelId")
    public void setBaseModelId(String baseModelId) {
        this.baseModelId = baseModelId;
    }

    /**
     * Getter for CreatedAt.
     * Creation date
     * @return Returns the LocalDateTime
     */
    @JsonGetter("createdAt")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * Creation date
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("createdAt")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for UpdatedAt.
     * Last time it was updated
     * @return Returns the LocalDateTime
     */
    @JsonGetter("updatedAt")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Setter for UpdatedAt.
     * Last time it was updated
     * @param updatedAt Value for LocalDateTime
     */
    @JsonSetter("updatedAt")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this ModelEx into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ModelEx [" + "name=" + name + ", type=" + type + ", description=" + description
                + ", id=" + id + ", proprietary=" + proprietary + ", baseModel=" + baseModel
                + ", baseModelId=" + baseModelId + ", createdAt=" + createdAt + ", updatedAt="
                + updatedAt + ", additionalProperties=" + additionalProperties + "]";
    }

    /**
     * Builds a new {@link ModelEx.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ModelEx.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(name, type, description)
                .id(getId())
                .proprietary(getProprietary())
                .baseModel(getBaseModel())
                .baseModelId(getBaseModelId())
                .createdAt(getCreatedAt())
                .updatedAt(getUpdatedAt());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link ModelEx}.
     */
    public static class Builder {
        private String name;
        private String type;
        private String description;
        private String id;
        private Boolean proprietary;
        private String baseModel;
        private String baseModelId;
        private LocalDateTime createdAt;
        private LocalDateTime updatedAt;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  name  String value for name.
         * @param  type  String value for type.
         * @param  description  String value for description.
         */
        public Builder(String name, String type, String description) {
            this.name = name;
            this.type = type;
            this.description = description;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for proprietary.
         * @param  proprietary  Boolean value for proprietary.
         * @return Builder
         */
        public Builder proprietary(Boolean proprietary) {
            this.proprietary = proprietary;
            return this;
        }

        /**
         * Setter for baseModel.
         * @param  baseModel  String value for baseModel.
         * @return Builder
         */
        public Builder baseModel(String baseModel) {
            this.baseModel = baseModel;
            return this;
        }

        /**
         * Setter for baseModelId.
         * @param  baseModelId  String value for baseModelId.
         * @return Builder
         */
        public Builder baseModelId(String baseModelId) {
            this.baseModelId = baseModelId;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(LocalDateTime updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link ModelEx} object using the set fields.
         * @return {@link ModelEx}
         */
        public ModelEx build() {
            ModelEx model =
                    new ModelEx(name, type, description, id, proprietary, baseModel, baseModelId,
                            createdAt, updatedAt);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
